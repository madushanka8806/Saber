//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SaberWebApplication.SaberServiceReference {
    using System;
    using System.Data;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SaberServiceReference.SaberWebServiceSoap")]
    public interface SaberWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddItem(int ItemCode, string ItemName, string UOM, int AvailableQty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddItem", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AddItemAsync(int ItemCode, string ItemName, string UOM, int AvailableQty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchItembyCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearchItembyCode(int ItemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchItembyCode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchItembyCodeAsync(int ItemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchItembyName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearchItembyName(string ItemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchItembyName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchItembyNameAsync(string ItemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddStock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool AddStock(int ItemCode, string ItemName, string UOM, int Qty, string TransactionType, string DocNumber, string Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddStock", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AddStockAsync(int ItemCode, string ItemName, string UOM, int Qty, string TransactionType, string DocNumber, string Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool PlaceOrder(int ItemCode, string ItemName, string UOM, int Qty, string TransactionType, string DocNumber, string Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> PlaceOrderAsync(int ItemCode, string ItemName, string UOM, int Qty, string TransactionType, string DocNumber, string Date);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SaberWebServiceSoapChannel : SaberWebApplication.SaberServiceReference.SaberWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaberWebServiceSoapClient : System.ServiceModel.ClientBase<SaberWebApplication.SaberServiceReference.SaberWebServiceSoap>, SaberWebApplication.SaberServiceReference.SaberWebServiceSoap {
        
        public SaberWebServiceSoapClient() {
        }
        
        public SaberWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SaberWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SaberWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SaberWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddItem(int ItemCode, string ItemName, string UOM, int AvailableQty) {
            return base.Channel.AddItem(ItemCode, ItemName, UOM, AvailableQty);
        }
        
        public System.Threading.Tasks.Task<string> AddItemAsync(int ItemCode, string ItemName, string UOM, int AvailableQty) {
            return base.Channel.AddItemAsync(ItemCode, ItemName, UOM, AvailableQty);
        }
        
        public System.Data.DataSet SearchItembyCode(int ItemCode) {
            return base.Channel.SearchItembyCode(ItemCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchItembyCodeAsync(int ItemCode) {
            return base.Channel.SearchItembyCodeAsync(ItemCode);
        }
        
        public System.Data.DataSet SearchItembyName(string ItemName) {
            return base.Channel.SearchItembyName(ItemName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchItembyNameAsync(string ItemName) {
            return base.Channel.SearchItembyNameAsync(ItemName);
        }
        
        public bool AddStock(int ItemCode, string ItemName, string UOM, int Qty, string TransactionType, string DocNumber, string Date) {
            return base.Channel.AddStock(ItemCode, ItemName, UOM, Qty, TransactionType, DocNumber, Date);
        }
        
        public System.Threading.Tasks.Task<bool> AddStockAsync(int ItemCode, string ItemName, string UOM, int Qty, string TransactionType, string DocNumber, string Date) {
            return base.Channel.AddStockAsync(ItemCode, ItemName, UOM, Qty, TransactionType, DocNumber, Date);
        }
        
        public bool PlaceOrder(int ItemCode, string ItemName, string UOM, int Qty, string TransactionType, string DocNumber, string Date) {
            return base.Channel.PlaceOrder(ItemCode, ItemName, UOM, Qty, TransactionType, DocNumber, Date);
        }
        
        public System.Threading.Tasks.Task<bool> PlaceOrderAsync(int ItemCode, string ItemName, string UOM, int Qty, string TransactionType, string DocNumber, string Date) {
            return base.Channel.PlaceOrderAsync(ItemCode, ItemName, UOM, Qty, TransactionType, DocNumber, Date);
        }

             
        internal string SearchItembyCode(string text)
        {
           throw new NotImplementedException();
        }
    }
}
